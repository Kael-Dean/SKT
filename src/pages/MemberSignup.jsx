import { useEffect, useMemo, useState } from "react"

/** ---------- Utils ---------- */
const onlyDigits = (s = "") => s.replace(/\D+/g, "")
const toNumber = (v) => (v === "" || v === null || v === undefined ? 0 : Number(v))

// ‡∏ï‡∏£‡∏ß‡∏à‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£ ‡∏õ‡∏ä‡∏ä.‡πÑ‡∏ó‡∏¢ (13 ‡∏´‡∏•‡∏±‡∏Å) ‡πÅ‡∏ö‡∏ö‡∏°‡∏µ checksum
function validateThaiCitizenId(id) {
  const cid = onlyDigits(id)
  if (cid.length !== 13) return false
  let sum = 0
  for (let i = 0; i < 12; i++) sum += Number(cid[i]) * (13 - i)
  const check = (11 - (sum % 11)) % 10
  return check === Number(cid[12])
}

// debounce ‡∏á‡πà‡∏≤‡∏¢‡πÜ
function useDebounce(value, delay = 400) {
  const [debounced, setDebounced] = useState(value)
  useEffect(() => {
    const t = setTimeout(() => setDebounced(value), delay)
    return () => clearTimeout(t)
  }, [value, delay])
  return debounced
}

// ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏•‡∏Ç‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô 000-0000-0000 ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô digits ‡∏•‡πâ‡∏ß‡∏ô‡∏ï‡∏≠‡∏ô‡∏™‡πà‡∏á)
function formatRegisterNo(raw) {
  const d = onlyDigits(raw).slice(0, 11)
  const p1 = d.slice(0, 3)
  const p2 = d.slice(3, 7)
  const p3 = d.slice(7, 11)
  if (d.length <= 3) return p1
  if (d.length <= 7) return `${p1}-${p2}`
  return `${p1}-${p2}-${p3}`
}

/** ---------- Component ---------- */
const MemberSignup = () => {
  const [errors, setErrors] = useState({})
  const [checkingCid, setCheckingCid] = useState(false)
  const [cidExists, setCidExists] = useState(null) // true | false | null

  const [form, setForm] = useState({
    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
    prefix: "",
    firstName: "",
    lastName: "",
    gender: "", // male | female
    maritalStatus: "", // single | married | divorced | widowed
    citizenId: "",
    registerNo: "", // 000-0000-0000
    group: "",
    depositAccount: "",

    // ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
    houseNo: "",
    moo: "",
    subdistrict: "",
    district: "",
    province: "",
    postalCode: "",
    phone: "",

    // ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ
    occupation: "",
    incomePerMonth: "",
    extraIncome: "",

    // ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡∏ñ‡∏∑‡∏≠‡∏Ñ‡∏£‡∏≠‡∏á
    landType: "", // own | rent | other
    rai: "",
    ngan: "",
    wah: "",

    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠
    creditLimit: "",

    // ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
    memberCode: "", // ‡πÉ‡∏´‡πâ backend ‡∏™‡∏£‡πâ‡∏≤‡∏á -> ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ô‡∏µ‡πâ disabled
    joinDate: new Date().toISOString().slice(0, 10),
  })

  const update = (k, v) => setForm((prev) => ({ ...prev, [k]: v }))

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏ã‡πâ‡∏≥ citizenId (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ API)
  const debouncedCID = useDebounce(form.citizenId)
  useEffect(() => {
    const cid = onlyDigits(debouncedCID)
    if (cid.length !== 13 || !validateThaiCitizenId(cid)) {
      setCidExists(null)
      return
    }
    const check = async () => {
      try {
        setCheckingCid(true)
        setCidExists(null)
        const token = localStorage.getItem("token")
        const res = await fetch(`/api/members/check-cid/${cid}`, {
          headers: {
            "Content-Type": "application/json",
            ...(token ? { Authorization: `Bearer ${token}` } : {}),
          },
        })
        if (res.ok) {
          const { exists } = await res.json()
          setCidExists(!!exists)
        } else {
          setCidExists(null)
        }
      } catch {
        setCidExists(null)
      } finally {
        setCheckingCid(false)
      }
    }
    check()
  }, [debouncedCID])

  const validateAll = () => {
    const e = {}
    if (!form.prefix) e.prefix = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤"
    if (!form.firstName) e.firstName = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠"
    if (!form.lastName) e.lastName = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
    if (!form.gender) e.gender = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏û‡∏®"
    if (!form.maritalStatus) e.maritalStatus = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏†‡∏≤‡∏û‡∏™‡∏°‡∏£‡∏™"
    if (!validateThaiCitizenId(form.citizenId)) e.citizenId = "‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"
    if (!form.group) e.group = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°"
    if (!form.subdistrict || !form.district || !form.province) e.address = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö"
    if (!form.postalCode) e.postalCode = "‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå"
    if (form.phone && onlyDigits(form.phone).length < 9) e.phone = "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"

    // ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ
    if (form.incomePerMonth !== "" && isNaN(Number(form.incomePerMonth))) e.incomePerMonth = "‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"
    if (form.extraIncome !== "" && isNaN(Number(form.extraIncome))) e.extraIncome = "‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"

    // ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡∏ñ‡∏∑‡∏≠‡∏Ñ‡∏£‡∏≠‡∏á (‡∏ñ‡πâ‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç)
    ;["rai", "ngan", "wah"].forEach((k) => {
      if (form[k] !== "" && isNaN(Number(form[k]))) e[k] = "‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"
    })

    // ‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠
    if (form.creditLimit !== "" && isNaN(Number(form.creditLimit))) e.creditLimit = "‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"

    if (!form.joinDate) e.joinDate = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å"
    setErrors(e)
    return Object.keys(e).length === 0
  }

  const landTotalWah = useMemo(() => {
    const rai = toNumber(form.rai)
    const ngan = toNumber(form.ngan)
    const wah = toNumber(form.wah)
    return rai * 400 + ngan * 100 + wah
  }, [form.rai, form.ngan, form.wah])

  const handleSubmit = async (ev) => {
    ev.preventDefault()
    if (!validateAll()) return

    const payload = {
      prefix: form.prefix,
      firstName: form.firstName.trim(),
      lastName: form.lastName.trim(),
      gender: form.gender,
      maritalStatus: form.maritalStatus,
      citizenId: onlyDigits(form.citizenId),
      registerNo: onlyDigits(form.registerNo), // ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô digits
      group: form.group,
      depositAccount: form.depositAccount.trim(),
      address: {
        houseNo: form.houseNo.trim(),
        moo: form.moo.trim(),
        subdistrict: form.subdistrict.trim(),
        district: form.district.trim(),
        province: form.province.trim(),
        postalCode: form.postalCode.trim(),
        phone: form.phone.trim(),
      },
      occupation: form.occupation,
      incomePerMonth: form.incomePerMonth === "" ? null : toNumber(form.incomePerMonth),
      extraIncome: form.extraIncome === "" ? null : toNumber(form.extraIncome),
      landHolding: {
        landType: form.landType, // own | rent | other
        rai: toNumber(form.rai),
        ngan: toNumber(form.ngan),
        wah: toNumber(form.wah),
        totalWah: landTotalWah,
      },
      credit: {
        limitTHB: form.creditLimit === "" ? null : toNumber(form.creditLimit),
      },
      joinDate: form.joinDate,
      // memberCode: ‡πÉ‡∏´‡πâ backend ‡∏™‡∏£‡πâ‡∏≤‡∏á
    }

    try {
      const token = localStorage.getItem("token")
      const res = await fetch("/api/members", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          ...(token ? { Authorization: `Bearer ${token}` } : {}),
        },
        body: JSON.stringify(payload),
      })
      if (!res.ok) throw new Error("‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
      alert("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‚úÖ")
      handleReset()
    } catch (err) {
      console.error(err)
      alert("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà")
    }
  }

  const handleReset = () => {
    setErrors({})
    setCidExists(null)
    setCheckingCid(false)
    setForm((prev) => ({
      ...prev,
      prefix: "",
      firstName: "",
      lastName: "",
      gender: "",
      maritalStatus: "",
      citizenId: "",
      registerNo: "",
      group: "",
      depositAccount: "",
      houseNo: "",
      moo: "",
      subdistrict: "",
      district: "",
      province: "",
      postalCode: "",
      phone: "",
      occupation: "",
      incomePerMonth: "",
      extraIncome: "",
      landType: "",
      rai: "",
      ngan: "",
      wah: "",
      creditLimit: "",
      memberCode: "",
      joinDate: new Date().toISOString().slice(0, 10),
    }))
  }

  /** ---------- UI ---------- */
  return (
    <div className="mx-auto max-w-6xl p-4 md:p-6">
      <h1 className="mb-4 text-2xl font-bold text-white">üë§ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</h1>

      {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å */}
      <form onSubmit={handleSubmit} className="rounded-2xl border border-emerald-200 bg-white p-4 shadow-sm">
        <h2 className="mb-3 text-lg font-semibold text-black">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</h2>

        <div className="grid gap-4 md:grid-cols-4 text-black">
          <div>
            <label className="mb-1 block text-sm font-medium">‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤</label>
            <select
              className={`w-full rounded-xl border p-2 outline-none transition ${
                errors.prefix ? "border-red-400" : "border-slate-300 focus:border-emerald-500"
              }`}
              value={form.prefix}
              onChange={(e) => update("prefix", e.target.value)}
            >
              <option value="">‚Äî ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‚Äî</option>
              <option value="‡∏ô‡∏≤‡∏¢">‡∏ô‡∏≤‡∏¢</option>
              <option value="‡∏ô‡∏≤‡∏á">‡∏ô‡∏≤‡∏á</option>
              <option value="‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß">‡∏ô‡∏≤‡∏á‡∏™‡∏≤‡∏ß</option>
              <option value="‡∏≠‡∏∑‡πà‡∏ô‡πÜ">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
            </select>
            {errors.prefix && <p className="mt-1 text-sm text-red-500">{errors.prefix}</p>}
          </div>

          <div className="md:col-span-2">
            <label className="mb-1 block text-sm font-medium">‡∏ä‡∏∑‡πà‡∏≠</label>
            <input
              className={`w-full rounded-xl border p-2 outline-none transition ${
                errors.firstName ? "border-red-400" : "border-slate-300 focus:border-emerald-500"
              }`}
              value={form.firstName}
              onChange={(e) => update("firstName", e.target.value)}
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡∏°‡∏ä‡∏≤‡∏¢"
            />
            {errors.firstName && <p className="mt-1 text-sm text-red-500">{errors.firstName}</p>}
          </div>

          <div>
            <label className="mb-1 block text-sm font-medium">‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</label>
            <input
              className={`w-full rounded-xl border p-2 outline-none transition ${
                errors.lastName ? "border-red-400" : "border-slate-300 focus:border-emerald-500"
              }`}
              value={form.lastName}
              onChange={(e) => update("lastName", e.target.value)}
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÉ‡∏à‡∏î‡∏µ"
            />
            {errors.lastName && <p className="mt-1 text-sm text-red-500">{errors.lastName}</p>}
          </div>

          <div className="md:col-span-2">
            <label className="mb-1 block text-sm font-medium">‡πÄ‡∏û‡∏®</label>
            <div className={`flex gap-6 rounded-xl border p-2 ${errors.gender ? "border-red-400" : "border-slate-300"}`}>
              <label className="flex items-center gap-2 text-sm">
                <input
                  type="radio"
                  name="gender"
                  checked={form.gender === "male"}
                  onChange={() => update("gender", "male")}
                />
                ‡∏ä‡∏≤‡∏¢
              </label>
              <label className="flex items-center gap-2 text-sm">
                <input
                  type="radio"
                  name="gender"
                  checked={form.gender === "female"}
                  onChange={() => update("gender", "female")}
                />
                ‡∏´‡∏ç‡∏¥‡∏á
              </label>
            </div>
            {errors.gender && <p className="mt-1 text-sm text-red-500">{errors.gender}</p>}
          </div>

          <div className="md:col-span-2">
            <label className="mb-1 block text-sm font-medium">‡∏™‡∏ñ‡∏≤‡∏ô‡∏†‡∏≤‡∏û‡∏™‡∏°‡∏£‡∏™</label>
            <select
              className={`w-full rounded-xl border p-2 outline-none transition ${
                errors.maritalStatus ? "border-red-400" : "border-slate-300 focus:border-emerald-500"
              }`}
              value={form.maritalStatus}
              onChange={(e) => update("maritalStatus", e.target.value)}
            >
              <option value="">‚Äî ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‚Äî</option>
              <option value="single">‡πÇ‡∏™‡∏î</option>
              <option value="married">‡∏™‡∏°‡∏£‡∏™</option>
              <option value="divorced">‡∏´‡∏¢‡πà‡∏≤</option>
              <option value="widowed">‡∏Ñ‡∏π‡πà‡∏™‡∏°‡∏£‡∏™‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï</option>
            </select>
            {errors.maritalStatus && <p className="mt-1 text-sm text-red-500">{errors.maritalStatus}</p>}
          </div>

          <div>
            <label className="mb-1 block text-sm font-medium">‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô (13 ‡∏´‡∏•‡∏±‡∏Å)</label>
            <input
              inputMode="numeric"
              maxLength={13}
              className={`w-full rounded-xl border p-2 outline-none transition ${
                errors.citizenId ? "border-red-400" : "border-slate-300 focus:border-emerald-500"
              }`}
              value={form.citizenId}
              onChange={(e) => update("citizenId", onlyDigits(e.target.value))}
              placeholder="‡πÄ‡∏ä‡πà‡∏ô 1234567890123"
            />
            <div className="mt-1 text-xs text-slate-500">
              {checkingCid && "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ã‡πâ‡∏≥..."}
              {!checkingCid && form.citizenId.length === 13 && cidExists === true && (
                <span className="text-amber-600">‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß</span>
              )}
              {errors.citizenId && <span className="text-red-500"> ‚Äî {errors.citizenId}</span>}
            </div>
          </div>

          <div>
            <label className="mb-1 block text-sm font-medium">‡πÄ‡∏•‡∏Ç‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</label>
            <input
              className="w-full rounded-xl border border-slate-300 p-2 outline-none focus:border-emerald-500"
              value={form.registerNo}
              onChange={(e) => update("registerNo", formatRegisterNo(e.target.value))}
              placeholder="000-0000-0000"
            />
          </div>

          <div>
            <label className="mb-1 block text-sm font-medium">‡∏Å‡∏•‡∏∏‡πà‡∏°</label>
            <select
              className={`w-full rounded-xl border p-2 outline-none transition ${
                errors.group ? "border-red-400" : "border-slate-300 focus:border-emerald-500"
              }`}
              value={form.group}
              onChange={(e) => update("group", e.target.value)}
            >
              <option value="">‚Äî ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‚Äî</option>
              <option value="A">‡∏Å‡∏•‡∏∏‡πà‡∏° A</option>
              <option value="B">‡∏Å‡∏•‡∏∏‡πà‡∏° B</option>
              <option value="C">‡∏Å‡∏•‡∏∏‡πà‡∏° C</option>
            </select>
            {errors.group && <p className="mt-1 text-sm text-red-500">{errors.group}</p>}
          </div>

          <div>
            <label className="mb-1 block text-sm font-medium">‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡∏ù‡∏≤‡∏Å</label>
            <input
              className="w-full rounded-xl border border-slate-300 p-2 outline-none focus:border-emerald-500"
              value={form.depositAccount}
              onChange={(e) => update("depositAccount", e.target.value)}
              placeholder="‡πÄ‡∏ä‡πà‡∏ô 123-4-56789-0"
            />
          </div>

          <div>
            <label className="mb-1 block text-sm font-medium">‡∏£‡∏´‡∏±‡∏™‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å (‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏≠‡∏Å)</label>
            <input
              disabled
              className="w-full rounded-xl border border-slate-300 bg-slate-100 p-2 outline-none"
              value={form.memberCode || "‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å"}
              readOnly
            />
          </div>

          <div>
            <label className="mb-1 block text-sm font-medium">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</label>
            <input
              type="date"
              className={`w-full rounded-xl border p-2 outline-none transition ${
                errors.joinDate ? "border-red-400" : "border-slate-300 focus:border-emerald-500"
              }`}
              value={form.joinDate}
              onChange={(e) => update("joinDate", e.target.value)}
            />
            {errors.joinDate && <p className="mt-1 text-sm text-red-500">{errors.joinDate}</p>}
          </div>
        </div>

        {/* ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà */}
        <div className="mt-6 rounded-2xl border border-emerald-100 bg-white p-4">
          <h3 className="mb-3 text-base font-semibold text-black">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</h3>
          <div className="grid gap-4 md:grid-cols-3 text-black">
            <div>
              <label className="mb-1 block text-sm font-medium">‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà</label>
              <input
                className="w-full rounded-xl border border-slate-300 p-2 outline-none focus:border-emerald-500"
                value={form.houseNo}
                onChange={(e) => update("houseNo", e.target.value)}
                placeholder="‡πÄ‡∏ä‡πà‡∏ô 99/1"
              />
            </div>
            <div>
              <label className="mb-1 block text-sm font-medium">‡∏´‡∏°‡∏π‡πà</label>
              <input
                className="w-full rounded-xl border border-slate-300 p-2 outline-none focus:border-emerald-500"
                value={form.moo}
                onChange={(e) => update("moo", e.target.value)}
                placeholder="‡πÄ‡∏ä‡πà‡∏ô 4"
              />
            </div>
            <div>
              <label className="mb-1 block text-sm font-medium">‡∏ï‡∏≥‡∏ö‡∏•</label>
              <input
                className={`w-full rounded-xl border p-2 outline-none transition ${
                  errors.address ? "border-amber-400" : "border-slate-300 focus:border-emerald-500"
                }`}
                value={form.subdistrict}
                onChange={(e) => update("subdistrict", e.target.value)}
                placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡∏ô‡∏≠‡∏á‡∏õ‡∏•‡∏≤‡πÑ‡∏´‡∏•"
              />
            </div>
            <div>
              <label className="mb-1 block text-sm font-medium">‡∏≠‡∏≥‡πÄ‡∏†‡∏≠</label>
              <input
                className={`w-full rounded-xl border p-2 outline-none transition ${
                  errors.address ? "border-amber-400" : "border-slate-300 focus:border-emerald-500"
                }`}
                value={form.district}
                onChange={(e) => update("district", e.target.value)}
                placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏°‡∏∑‡∏≠‡∏á"
              />
            </div>
            <div>
              <label className="mb-1 block text-sm font-medium">‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î</label>
              <input
                className={`w-full rounded-xl border p-2 outline-none transition ${
                  errors.address ? "border-amber-400" : "border-slate-300 focus:border-emerald-500"
                }`}
                value={form.province}
                onChange={(e) => update("province", e.target.value)}
                placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô"
              />
            </div>
            <div>
              <label className="mb-1 block text-sm font-medium">‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå</label>
              <input
                inputMode="numeric"
                maxLength={5}
                className={`w-full rounded-xl border p-2 outline-none transition ${
                  errors.postalCode ? "border-red-400" : "border-slate-300 focus:border-emerald-500"
                }`}
                value={form.postalCode}
                onChange={(e) => update("postalCode", onlyDigits(e.target.value))}
                placeholder="‡πÄ‡∏ä‡πà‡∏ô 40000"
              />
              {errors.postalCode && <p className="mt-1 text-sm text-red-500">{errors.postalCode}</p>}
            </div>
            <div className="md:col-span-2">
              <label className="mb-1 block text-sm font-medium">‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</label>
              <input
                inputMode="tel"
                className={`w-full rounded-xl border p-2 outline-none transition ${
                  errors.phone ? "border-red-400" : "border-slate-300 focus:border-emerald-500"
                }`}
                value={form.phone}
                onChange={(e) => update("phone", e.target.value)}
                placeholder="‡πÄ‡∏ä‡πà‡∏ô 08x-xxx-xxxx"
              />
              {errors.phone && <p className="mt-1 text-sm text-red-500">{errors.phone}</p>}
            </div>
          </div>
        </div>

        {/* ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ */}
        <div className="mt-6 rounded-2xl border border-emerald-100 bg-white p-4">
          <h3 className="mb-3 text-base font-semibold text-black">‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ</h3>
          <div className="grid gap-4 md:grid-cols-3 text-black">
            <div>
              <label className="mb-1 block text-sm font-medium">‡∏≠‡∏≤‡∏ä‡∏µ‡∏û</label>
              <select
                className="w-full rounded-xl border border-slate-300 p-2 outline-none focus:border-emerald-500"
                value={form.occupation}
                onChange={(e) => update("occupation", e.target.value)}
              >
                <option value="">‚Äî ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‚Äî</option>
                <option value="‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏Å‡∏£">‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏Å‡∏£</option>
                <option value="‡∏£‡∏±‡∏ö‡∏à‡πâ‡∏≤‡∏á">‡∏£‡∏±‡∏ö‡∏à‡πâ‡∏≤‡∏á</option>
                <option value="‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢">‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢</option>
                <option value="‡∏Ç‡πâ‡∏≤‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£/‡∏£‡∏±‡∏ê‡∏ß‡∏¥‡∏™‡∏≤‡∏´‡∏Å‡∏¥‡∏à">‡∏Ç‡πâ‡∏≤‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£/‡∏£‡∏±‡∏ê‡∏ß‡∏¥‡∏™‡∏≤‡∏´‡∏Å‡∏¥‡∏à</option>
                <option value="‡∏≠‡∏∑‡πà‡∏ô‡πÜ">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
              </select>
            </div>
            <div>
              <label className="mb-1 block text-sm font-medium">‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (‡∏ö‡∏≤‡∏ó)</label>
              <input
                inputMode="decimal"
                className={`w-full rounded-xl border p-2 outline-none transition ${
                  errors.incomePerMonth ? "border-red-400" : "border-slate-300 focus:border-emerald-500"
                }`}
                value={form.incomePerMonth}
                onChange={(e) => update("incomePerMonth", e.target.value.replace(/[^\d.]/g, ""))}
                placeholder="‡πÄ‡∏ä‡πà‡∏ô 15000"
              />
              {errors.incomePerMonth && <p className="mt-1 text-sm text-red-500">{errors.incomePerMonth}</p>}
            </div>
            <div>
              <label className="mb-1 block text-sm font-medium">‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏û‡∏¥‡πÄ‡∏®‡∏© (‡∏ö‡∏≤‡∏ó)</label>
              <input
                inputMode="decimal"
                className={`w-full rounded-xl border p-2 outline-none transition ${
                  errors.extraIncome ? "border-red-400" : "border-slate-300 focus:border-emerald-500"
                }`}
                value={form.extraIncome}
                onChange={(e) => update("extraIncome", e.target.value.replace(/[^\d.]/g, ""))}
                placeholder="‡πÄ‡∏ä‡πà‡∏ô 3000"
              />
              {errors.extraIncome && <p className="mt-1 text-sm text-red-500">{errors.extraIncome}</p>}
            </div>
          </div>
        </div>

        {/* ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡∏ñ‡∏∑‡∏≠‡∏Ñ‡∏£‡∏≠‡∏á */}
        <div className="mt-6 rounded-2xl border border-emerald-100 bg-white p-4">
          <h3 className="mb-3 text-base font-semibold text-black">‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡∏ñ‡∏∑‡∏≠‡∏Ñ‡∏£‡∏≠‡∏á</h3>
          <div className="grid gap-4 md:grid-cols-4 text-black">
            <div className="md:col-span-1">
              <label className="mb-1 block text-sm font-medium">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</label>
              <select
                className="w-full rounded-xl border border-slate-300 p-2 outline-none focus:border-emerald-500"
                value={form.landType}
                onChange={(e) => update("landType", e.target.value)}
              >
                <option value="">‚Äî ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‚Äî</option>
                <option value="own">‡∏Ç‡∏≠‡∏á‡∏ï‡∏ô‡πÄ‡∏≠‡∏á</option>
                <option value="rent">‡πÄ‡∏ä‡πà‡∏≤</option>
                <option value="other">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
              </select>
            </div>
            <div>
              <label className="mb-1 block text-sm font-medium">‡πÑ‡∏£‡πà</label>
              <input
                inputMode="numeric"
                className={`w-full rounded-xl border p-2 outline-none transition ${
                  errors.rai ? "border-red-400" : "border-slate-300 focus:border-emerald-500"
                }`}
                value={form.rai}
                onChange={(e) => update("rai", onlyDigits(e.target.value))}
                placeholder="0"
              />
              {errors.rai && <p className="mt-1 text-sm text-red-500">{errors.rai}</p>}
            </div>
            <div>
              <label className="mb-1 block text-sm font-medium">‡∏á‡∏≤‡∏ô</label>
              <input
                inputMode="numeric"
                className={`w-full rounded-xl border p-2 outline-none transition ${
                  errors.ngan ? "border-red-400" : "border-slate-300 focus:border-emerald-500"
                }`}
                value={form.ngan}
                onChange={(e) => update("ngan", onlyDigits(e.target.value))}
                placeholder="0"
              />
              {errors.ngan && <p className="mt-1 text-sm text-red-500">{errors.ngan}</p>}
            </div>
            <div>
              <label className="mb-1 block text-sm font-medium">‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤</label>
              <input
                inputMode="numeric"
                className={`w-full rounded-xl border p-2 outline-none transition ${
                  errors.wah ? "border-red-400" : "border-slate-300 focus:border-emerald-500"
                }`}
                value={form.wah}
                onChange={(e) => update("wah", onlyDigits(e.target.value))}
                placeholder="0"
              />
              {errors.wah && <p className="mt-1 text-sm text-red-500">{errors.wah}</p>}
            </div>
          </div>
          <p className="mt-2 text-xs text-slate-500">
            ‡∏£‡∏ß‡∏° ‚âà {landTotalWah} ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤ (1 ‡πÑ‡∏£‡πà = 400 ‡∏ï‡∏£‡∏ß., 1 ‡∏á‡∏≤‡∏ô = 100 ‡∏ï‡∏£‡∏ß.)
          </p>
        </div>

        {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠ */}
        <div className="mt-6 rounded-2xl border border-emerald-100 bg-white p-4">
          <h3 className="mb-3 text-base font-semibold text-black">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠</h3>
          <div className="grid gap-4 md:grid-cols-3 text-black">
            <div>
              <label className="mb-1 block text-sm font-medium">‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠ (‡∏ö‡∏≤‡∏ó)</label>
              <input
                inputMode="decimal"
                className={`w-full rounded-xl border p-2 outline-none transition ${
                  errors.creditLimit ? "border-red-400" : "border-slate-300 focus:border-emerald-500"
                }`}
                value={form.creditLimit}
                onChange={(e) => update("creditLimit", e.target.value.replace(/[^\d.]/g, ""))}
                placeholder="‡πÄ‡∏ä‡πà‡∏ô 50000"
              />
              {errors.creditLimit && <p className="mt-1 text-sm text-red-500">{errors.creditLimit}</p>}
            </div>
          </div>
        </div>

        {/* ‡∏õ‡∏∏‡πà‡∏° */}
        <div className="mt-6 flex flex-col gap-3 sm:flex-row">
          <button
            type="submit"
            className="inline-flex items-center justify-center rounded-xl bg-emerald-600 px-5 py-2.5 font-medium text-white hover:bg-emerald-700 active:scale-[.98]"
          >
            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
          </button>
          <button
            type="button"
            onClick={handleReset}
            className="inline-flex items-center justify-center rounded-xl border border-slate-300 bg-white px-5 py-2.5 font-medium text-slate-700 hover:bg-slate-50 active:scale-[.98]"
          >
            ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
          </button>
        </div>
      </form>
    </div>
  )
}

export default MemberSignup
